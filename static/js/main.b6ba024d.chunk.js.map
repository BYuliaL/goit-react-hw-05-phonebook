{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Form/Form.module.css","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["module","exports","Form","state","name","number","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onAdd","reset","onSubmit","this","className","styles","form","form__label","form__input","type","onChange","pattern","title","required","form__button","Component","Contacts","contacts","onDeleteContact","map","id","contactsList","contactsList__button","onClick","prototype","PropTypes","arrayOf","shape","string","isRequired","func","Filter","filter","App","formSubmitHandler","data","shortid","generate","contact","toLowerCase","includes","alert","prevState","changeFilter","currentTarget","getVisibleContacts","normalizedFilter","removeContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","components","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6ba024d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__1Lr0X\",\"contactsList__button\":\"Contacts_contactsList__button__2xb6F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2S1P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__button\":\"Form_form__button__N_N_d\",\"form__label\":\"Form_form__label__3BhX_\"};","import { Component } from 'react';\nimport styles from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label className={styles.form__label}>\n          Name\n          <br />\n          <input\n            className={styles.form__input}\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <br />\n        <label className={styles.form__label}>\n          Namber\n          <br />\n          <input\n            className={styles.form__input}\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <br />\n        <button className={styles.form__button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes from 'prop-types';\n\nimport styles from './Contacts.module.css';\n\nconst Contacts = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactsList}>\n          {name}, {number}\n          <button\n            className={styles.contactsList__button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.filter}>\n      Find contacts by name: <br />\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    filter: '',\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.components) {\n      localStorage.setItem('components', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    const data = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const inputValue = this.state.contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (inputValue) {\n      alert(`Name '${name}' is already in contacts`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [data, ...prevState.contacts],\n      }));\n    }\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Form onAdd={this.formSubmitHandler} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <Contacts\n          contacts={visibleContacts}\n          onDeleteContact={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}